{"ast":null,"code":"var _jsxFileName = \"/home/mdskrumi/Code/React/component-life-cycle/src/App.js\";\nimport React from 'react';\nimport logo from \"./logo.svg\";\nimport './App.css';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    console.log(\"Constructor Called\");\n    this.state = {\n      clicked: 0\n    };\n    this.onDivClicked = this.onDivClicked.bind(this);\n  }\n\n  onDivClicked() {\n    this.setState({\n      clicked: this.state.clicked + 1\n    });\n    console.log(\"Clicked\");\n  }\n\n  componentWillMount() {\n    console.log('Component WILL MOUNT!');\n  }\n\n  componentDidMount() {\n    console.log('Component DID MOUNT!');\n  }\n\n  componentWillReceiveProps(newProps) {\n    console.log('Component WILL RECIEVE PROPS!');\n  }\n\n  shouldComponentUpdate(newProps, newState) {\n    return true;\n  }\n\n  componentWillUpdate(nextProps, nextState) {\n    console.log('Component WILL UPDATE!');\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    console.log('Component DID UPDATE!');\n  }\n\n  componentWillUnmount() {\n    console.log('Component WILL UNMOUNT!');\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      onClick: this.onDivClicked,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }\n    }, \" This Header is Clicked \", this.state.clicked, \" times. \"));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/mdskrumi/Code/React/component-life-cycle/src/App.js"],"names":["React","App","Component","constructor","props","console","log","state","clicked","onDivClicked","bind","setState","componentWillMount","componentDidMount","componentWillReceiveProps","newProps","shouldComponentUpdate","newState","componentWillUpdate","nextProps","nextState","componentDidUpdate","prevProps","prevState","componentWillUnmount","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,OAAO,WAAP;;AAEA,MAAMC,GAAN,SAAkBD,KAAK,CAACE,SAAxB,CAAkC;AAChCC,EAAAA,WAAW,CAACC,KAAD,EAAO;AAChB,UAAMA,KAAN;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,OAAO,EAAG;AADC,KAAb;AAGA,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBC,IAAlB,CAAuB,IAAvB,CAApB;AACD;;AACDD,EAAAA,YAAY,GAAE;AACZ,SAAKE,QAAL,CAAe;AAACH,MAAAA,OAAO,EAAE,KAAKD,KAAL,CAAWC,OAAX,GAAqB;AAA/B,KAAf;AACAH,IAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AACD;;AACDM,EAAAA,kBAAkB,GAAG;AACnBP,IAAAA,OAAO,CAACC,GAAR,CAAY,uBAAZ;AACF;;AACDO,EAAAA,iBAAiB,GAAG;AACjBR,IAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ;AACF;;AACDQ,EAAAA,yBAAyB,CAACC,QAAD,EAAW;AACjCV,IAAAA,OAAO,CAACC,GAAR,CAAY,+BAAZ;AACF;;AACDU,EAAAA,qBAAqB,CAACD,QAAD,EAAWE,QAAX,EAAqB;AACvC,WAAO,IAAP;AACF;;AACDC,EAAAA,mBAAmB,CAACC,SAAD,EAAYC,SAAZ,EAAuB;AACvCf,IAAAA,OAAO,CAACC,GAAR,CAAY,wBAAZ;AACF;;AACDe,EAAAA,kBAAkB,CAACC,SAAD,EAAYC,SAAZ,EAAuB;AACtClB,IAAAA,OAAO,CAACC,GAAR,CAAY,uBAAZ;AACF;;AACDkB,EAAAA,oBAAoB,GAAG;AACpBnB,IAAAA,OAAO,CAACC,GAAR,CAAY,yBAAZ;AACF;;AACAmB,EAAAA,MAAM,GAAG;AACP,wBACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAI,MAAA,OAAO,EAAE,KAAKhB,YAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mCAAyD,KAAKF,KAAL,CAAWC,OAApE,aADF,CADF;AAKD;;AAxC+B;;AA2ClC,eAAeP,GAAf","sourcesContent":["import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\n\nclass App extends React.Component {\n  constructor(props){\n    super(props);\n    console.log(\"Constructor Called\");\n    this.state = {\n      clicked : 0,\n    }\n    this.onDivClicked = this.onDivClicked.bind(this);\n  }\n  onDivClicked(){\n    this.setState( {clicked: this.state.clicked + 1 } );\n    console.log(\"Clicked\");\n  }\n  componentWillMount() {\n    console.log('Component WILL MOUNT!')\n }\n componentDidMount() {\n    console.log('Component DID MOUNT!')\n }\n componentWillReceiveProps(newProps) {    \n    console.log('Component WILL RECIEVE PROPS!')\n }\n shouldComponentUpdate(newProps, newState) {\n    return true;\n }\n componentWillUpdate(nextProps, nextState) {\n    console.log('Component WILL UPDATE!');\n }\n componentDidUpdate(prevProps, prevState) {\n    console.log('Component DID UPDATE!')\n }\n componentWillUnmount() {\n    console.log('Component WILL UNMOUNT!')\n }\n  render (){\n    return(\n      <div className=\"App\">\n        <h1 onClick={this.onDivClicked}> This Header is Clicked {this.state.clicked} times. </h1>\n    </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}